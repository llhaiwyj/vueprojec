<template>
	<transition name="modal-fade">
		<div class="modal-backdrop">
			<div class="modal" @click.stop>
				<div class="modal-header">
					<slot name="header">
						<h2>门店设置---添加</h2>
					</slot>
				</div>
				<div class="modal-body" id="modal-body">
					<slot name="body">
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.no.$error }">
									<span class="mc">门店编号</span>
									<el-input @blur="test" v-model="no" class="name1" @change="selectFlag('1')" clearable>
									</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.no.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storeName.$error }">
									<span class="mc">门店名称</span>
									<el-input @blur="test" v-model="storeName" class="name1" @change="selectFlag('2')" clearable>
									</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.storeName.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.bussinessId.$error }">
									<span class="mc">所属商家</span>
									<el-select @blur="test" class="xl" @change="checkeds" v-model="bussinessId">
										<el-option v-for="item in store" :key="item.bussinessID" :label="item.bussinessName" :value="item.bussinessID"></el-option>
									</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.bussinessId.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storePhone.$error }">
									<span class="mc">门店电话</span>
									<el-input @blur="test" v-model="storePhone" class="name1" @change="checkeds" clearable>
									</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.phoneNum.required">不能为空</span>
								<span class="form-group__message" v-if="!$v.phoneNum.numeric">只能输入数字</span>
								<span class="form-group__message" v-if="!$v.phoneNum.minLength">请输入正确手机号</span>
								<span class="form-group__message" v-if="!$v.phoneNum.maxLength">能超过11位数字</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storeLinkPerson.$error }">
									<span class="mc">联系人</span>
									<el-input @blur="test" v-model="storeLinkPerson" class="name1" @change="checkeds" clearable>
									</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.storeLinkPerson.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.phoneNum.$error }">
									<span class="mc">手机号码</span>
									<el-input @blur="test" v-model="phoneNum" class="name1" @change="checkeds" clearable>
									</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.phoneNum.required">不能为空</span>
								<span class="form-group__message" v-if="!$v.phoneNum.numeric">只能输入数字</span>
								<span class="form-group__message" v-if="!$v.phoneNum.minLength">请输入正确手机号</span>
								<span class="form-group__message" v-if="!$v.phoneNum.maxLength">能超过11位数字</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.state.$error }">
									<span class="mc">门店状态</span>
									<el-select @blur="test" class="xl" v-model="state">
										<el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value"></el-option>
									</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.state.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.isRest.$error }">
									<span class="mc">是否歇业</span>
									<el-select @blur="test" class="xl" v-model="isRest">
										<el-option v-for="item in outofbusiness" :key="item.value" :label="item.label" :value="item.value"></el-option>
									</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.isRest.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.doTimeStart.$error }">
									<span class="mc">营业开始时间</span>
									<el-time-select @blur="test" class="xl" v-model="doTimeStart" @change="selecttime('1')" :picker-options="{start:'08:30',step:'00:30',end:'22:00'}">
									</el-time-select>
								</div>
								<span class="form-group__message" v-if="!$v.doTimeStart.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.doTimeEnd.$error }">
									<span class="mc">营业结束时间</span>
									<el-time-select @blur="test" class="xl" v-model="doTimeEnd" @change="selecttime('2')" :picker-options="{start:'08:30',step:'00:30',end:'22:00',minTime:doTimeStart}">
									</el-time-select>
								</div>
								<span class="form-group__message" v-if="!$v.doTimeEnd.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.YuYue.$error }">
									<span class="mc">是否预约</span>
									<el-select @blur="test" class="xl" v-model="YuYue" v-on:change="makeappointment">
										<el-option v-for="item in activity" :key="item.value" :label="item.label" :value="item.value"></el-option>
									</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.YuYue.required">不能为空</span>
							</div>
						</el-col>

						<el-col class="row" :xs="24" :sm="24" :md="24" :lg="24" :xl="24">
							<div class="yueyue" v-show="xianshi">
								<div class="ti">
									<el-col class="row" :xs="24" :sm="24" :md="24" :lg="12" :xl="12">
										<p class="s" v-for="i in time">{{i}}</p>
									</el-col>
								</div>
								<div class="ti">
									<el-col class="row" :xs="24" :sm="24" :md="24" :lg="12" :xl="12">
										<input class="time" name="aa" v-for="i in renshu">{{i}}</input>
									</el-col>
								</div>
								<!--	<el-col class="row" :xs="18" :sm="18" :md="18" :lg="18" :xl="18"><button type="button" class="but el-button el-button--primary" @click="save">保存</button></el-col>-->
							</div>
						</el-col>
						
						<el-col class="row reformbox" :xs="24" :sm="24" :md="24" :lg="24" :xl="24">
							<div class="reform">
								<h5>门店地址<i class="el-collapse-item__arrow el-icon-arrow-right"></i></h5>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storeLng.$error }">
									<span class="mc">门店经度</span>
									<el-input @blur="test" v-model="storeLng" class="name1" clearable>
								</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.storeLng.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storeLat.$error }">
									<span class="mc">门店纬度</span>
									<el-input @blur="test" v-model="storeLat" class="name1" clearable>
								</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.storeLat.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.proves.$error }">
									<span class="mc">所在省</span>
									<select @blur="test" class="xl" v-model="proves" v-on:change="areaprov($event)">
									<option v-for="(k,index) in provs" :value="k.ID">{{k.areaName}}</option>
								</select>
								</div>
								<span class="form-group__message" v-if="!$v.proves.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.citys.$error }">
									<span class="mc">所在市</span>
									<select @blur="test" class="xl" v-model="citys" v-on:change="areacity($event)">
									<option v-for="k  in cityArr" :value="k.ID">{{k.areaName}}</option>
								</select>
								</div>
								<span class="form-group__message" v-if="!$v.citys.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.diqu.$error }">
									<span class="mc">所在区</span>
									<select @blur="test" class="xl" v-model="diqu" v-on:change="xianqus($event)">
									<option v-for="l in districtArr" :value="l.ID">{{l.areaName}}</option>
								</select>
								</div>
								<span class="form-group__message" v-if="!$v.diqu.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storeAreaID.$error }">
									<span class="mc">商圈</span>
										<select @blur="test" class="xl" v-model="storeAreaID" v-on:change="xian($event)">
									<option v-for="l in street" :value="l.ID">{{l.name}}</option>
								</select>
								</div>
								<span class="form-group__message" v-if="!$v.storeAreaID.required">不能为空</span>
							</div>
						</el-col>
						<el-col :span="7" class="gutterspan">
							<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.storeAddress.$error }">
									<span class="mc">门店地址</span>
										<el-input @blur="test" v-model="storeAddress" class="name1" clearable>
								</el-input>
								</div>
								<span class="form-group__message" v-if="!$v.storeAddress.required">不能为空</span>
							</div>
						</el-col>
						
						<!--上传文件-->
						<!--end上传文件-->
						<el-col class="row reformbox" :xs="24" :sm="24" :md="24" :lg="24" :xl="24">
							<div class="reform">
								<h5>门店logo<i class="el-collapse-item__arrow el-icon-arrow-right"></i></h5>
							</div>
						</el-col>
						<!--<el-col class="row shangchuan" :xs="12" :sm="12" :md="12" :lg="12" :xl="12">
								<div class="weixin">
									<h5>商户图片</h5><i class="el-collapse-item__arrow el-icon-arrow-right"></i></div>
								<div class="z_file" @click="clickme1" @mouseenter="enterpointer1" @mouseleave="exportpointer1">
									<img :src="uploadfile" class="bai100">
									<div class="iconde" v-show="iconshow">
										<div class="lefticon"><i class="el-icon-edit deleteicon"></i></div>
										<div class="righticon" @click.stop="deleteimg('1')"><i class="el-icon-delete deleteicon"></i></div>
										<input type="file" id="inputfile"  class="DISnone" name="aaaa" @change="update($event,'1')" capture="camera">
									</div>
								</div>
							</el-col>-->
						</el-row>

					</slot>
				</div>
				<div class="modal-footer">
					<slot name="footer">
						<el-button class="el-button el-button--primary queding" @click="storeAdd">确定</el-button>
						<button type="button" class="el-button el-button--default guanbi" @click="close">关闭</button>
					</slot>
				</div>
			</div>
		</div>
	</transition>
</template>

<script>
	import { required,numeric,minLength,maxLength,or} from 'vuelidate/lib/validators'
	export default {
		props: [],
		data() {
			return {
				menuId: this.$route.query.menuIds,
				listCity: this.$storage.fetch("listCity"),
				areaList: this.$storage.fetch("areaList"),
				store: this.$storage.fetch("bussiness"),
				xianshi: false,
				no: '',
				storeName: '',
				bussinessId: '',
				storePhone: '',
				storeLinkPerson: '',
				phoneNum: '',
				state: '',
				isRest: '',
				storeAreaID: '',
				options: [{
						value: '0',
						label: '启用'
					},
					{
						value: '1',
						label: '停用'
					}
				],
				outofbusiness: [{
						value: '0',
						label: '是'
					},
					{
						value: '1',
						label: '否'
					}
				],
				doTimeStart: '',
				doTimeEnd: '',
				YuYue: '',
				activity: [{
						value: '1',
						label: '是'
					},
					{
						value: '0',
						label: '否'
					}
				],
				storeLng: '',
				storeLat: '',
				proves: '120000',
				citys: '',
				diqu: '',
				streets: '',
				storeAreaName: '',
				storeAddress: '',
				provs: [],
				cityArr: [],
				districtArr: [],
				street: [],
				arrays: [],
				arrs: '',
				time: [],
				renshu: [],
			}
		},
		validations: {   
		    no: {  
		      required 
		    } , 
		    storeName: {  
		      required  
		    },  
		    bussinessId: {  
		      required  
		    },
		    storePhone: {  
		      required,
		      numeric,
		      minLength: minLength(11),
		      maxLength: maxLength(11),
		      //or:or(/^((0\d{2,3}-\d{7,8})|(1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}))$/)
		    },
		     storeLinkPerson: {  
		      required  
		    },
		    phoneNum: {  
		      required,
		      numeric,
		      minLength: minLength(11),
		      maxLength: maxLength(11),
		      //or:or(/^((0\d{2,3}-\d{7,8})|(1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}))$/)
		    },
		     state: {  
		      required  
		    },
		     isRest: {  
		      required  
		    },
		      doTimeStart: {  
		      required  
		    },
		      doTimeEnd: {  
		      required  
		    },
		      YuYue: {  
		      required  
		    },
		      storeLng: {  
		      required  
		    },
		      storeLat: {  
		      required  
		    },
		     proves: {  
		      required  
		    },
		     citys: {
		      required  
		    },
		     diqu: {  
		      required  
		    }, 
		     storeAreaID: {  
		      required  
		    },
		    storeAddress: {
		      required  
		    },
		    
		   
    },
		mounted: function() {
			for(let i in this.listCity) {
				if(this.listCity[i].parentID == '0') {
					this.provs.push(this.listCity[i])
				}
			}
			for(let i in this.listCity) {
				if(this.listCity[i].parentID == this.proves) {
					this.cityArr.push(this.listCity[i])
				}
			}
			//         console.log(this.provs)
		},
		methods: {
			test(){
				this.$v.no.$touch()
             	if(this.$v.no.$error){
					return false;
				}
             	this.$v.storeName.$touch()
             	if(this.$v.storeName.$error){
					return false;
				}
             	this.$v.bussinessId.$touch()
             	if(this.$v.bussinessId.$error){
					return false;
				}
             	this.$v.storePhone.$touch()
             	if(this.$v.storePhone.$error){
					return false;
				}
             	this.$v.storeLinkPerson.$touch()
             	if(this.$v.storeLinkPerson.$error){
					return false;
				}
             	this.$v.phoneNum.$touch()
             	if(this.$v.phoneNum.$error){
					return false;
				}
             	this.$v.state.$touch()
             	if(this.$v.state.$error){
					return false;
				}
             	this.$v.isRest.$touch()
             	if(this.$v.isRest.$error){
					return false;
				}
             	this.$v.doTimeStart.$touch()
             	if(this.$v.doTimeStart.$error){
					return false;
				}
             	this.$v.doTimeEnd.$touch()
             	if(this.$v.doTimeEnd.$error){
					return false;
				}
             	this.$v.YuYue.$touch()
             	if(this.$v.YuYue.$error){
					return false;
				}
             	this.$v.storeLng.$touch()
             	if(this.$v.storeLng.$error){
					return false;
				}
             	this.$v.storeLat.$touch()
             	if(this.$v.storeLat.$error){
					return false;
				}
             	this.$v.proves.$touch()
             	if(this.$v.proves.$error){
					return false;
				}
             	this.$v.citys.$touch()
             	if(this.$v.citys.$error){
					return false;
				}
             	this.$v.diqu.$touch()
             	if(this.$v.diqu.$error){
					return false;
				}
             	this.$v.storeAreaID.$touch()
             	if(this.$v.storeAreaID.$error){
					return false;
				}
             	this.$v.storeAddress.$touch()
             	if(this.$v.storeAddress.$error){
					return false;
				}
             	return true;
			},
//			checkeds(){
//				   //保存点击验证
//				let tip = this.$message.error;
//				let tipyu = "请输入商家编号";
//				if(this.bussinessID == ""){
//  	        	this.$storage1.UserName(this.bussinessID, tip, tipyu);
//  	        	
//  	        	return false;
//  	        }
//				tipyu = "请输入商家名称";
//				if (this.bussinessName == "") {
//  				//this.$message.error("请输入查询的内容");
//	    		    this.$storage1.UserName(this.bussinessName, tip, tipyu);					
//  				return false;
//  	       } 
//  	       tipyu = "请输入联系人";
//  	        if(this.bussinessLinkPerson == ""){
//  	        	this.$storage1.UserName(this.bussinessLinkPerson, tip, tipyu);
//  	        	return false;
//  	        }
//  	        tipyu = "请输入手机号";
//  	        if(this.phoneNum == ""){
//  	        	this.$storage1.UserName(this.phoneNum, tip, tipyu);
//  	        	return false;
//  	        }else{
//  	        	//验证手机号格式
//  	        	let r = /^((0\d{2,3}-\d{7,8})|(1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}))$/;
//  	        	if(!r.test(this.phoneNum)) {
//					   this.$message({
//							type: 'error',
//							message: '请填写正确的手机号码!'
//						});
//					return false;
//				   }
//  	        }
//  	        tipyu = "请输入商户类型";
//  	         if(this.isFormal == ""){
//  	        	this.$storage1.UserName(this.isFormal, tip, tipyu);
//  	        	return false;
//  	        }
//  	        tipyu = "请输入经营类型";
//  	         if(this.scopeId == ""){
//  	        	this.$storage1.UserName(this.scopeId, tip, tipyu);
//  	        	
//  	        	return false;
//  	        }
//  	        tipyu = "请输入使用开始时间";
//				if (this.durationTime == "") {
//  				//this.$message.error("请输入查询的内容");
//	    		    this.$storage1.UserName(this.durationTime, tip, tipyu);					
//  				return false;
//  	       } 
//  	       tipyu = "请选择所在省份";
//  	        if(this.proves== ""){
//  	        	this.$storage1.UserName(this.proves, tip, tipyu);
//  	        	return false;
//  	        }
//  	        tipyu = "请选择所在城市";
//  	        if(this.citys == ""){
//  	        	this.$storage1.UserName(this.citys, tip, tipyu);
//  	        	return false;
//  	        }
//  	        tipyu = "请选择所在区域";
//  	         if(this.diqu == ""){
//  	        	this.$storage1.UserName(this.diqu, tip, tipyu);
//  	        	return false;
//  	        }
//  	         return true;
//			},
			//预约的隐藏和显示
			makeappointment() {
				console.log(this.YuYue)
				if(this.YuYue == '1') {
					this.xianshi = true
					this.$ajax.post(`${this.$url}/bussinessStore/initYuYueSet.html`).then(data => {
							console.log(data)
							//					this.str=data.data.list
							this.time = data.data.list[0].split(',')
							this.renshu = data.data.list[0].split(',')
							console.log(this.time)
							console.log(this.renshu)

						})
						.catch((error) => {
							console.log(error)
							this.$message.error('获取数据失败');
						})
				} else {
					this.xianshi = false
				}
			},
//			checkeds() {
//				//保存点击验证
//				let tip = this.$message.error;
//				let tipyu = "请输入门店编号";
//				if(this.no == "") {
//					this.$storage1.UserName(this.no, tip, tipyu);
//
//					return false;
//				}
//				tipyu = "请输入门店名称";
//				if(this.storeName == "") {
//					//this.$message.error("请输入查询的内容");
//					this.$storage1.UserName(this.storeName, tip, tipyu);
//					return false;
//				}
//				tipyu = "请输入联系人";
//				if(this.storeLinkPerson == "") {
//					this.$storage1.UserName(this.storeLinkPerson, tip, tipyu);
//					return false;
//				}
//				tipyu = "请输入手机号";
//				if(this.phoneNum == "") {
//					this.$storage1.UserName(this.phoneNum, tip, tipyu);
//					return false;
//				} else {
//					//验证手机号格式
//					let r = /^((0\d{2,3}-\d{7,8})|(1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}))$/;
//					if(!r.test(this.phoneNum)) {
//						this.$message({
//							type: 'error',
//							message: '请填写正确的手机号码!'
//						});
//						return false;
//					}
//				}
//				tipyu = "请选择门店状态";
//				if(this.state == "") {
//					this.$storage1.UserName(this.state, tip, tipyu);
//					return false;
//				}
//				tipyu = "请选择是否预约";
//				if(this.YuYue == "") {
//					this.$storage1.UserName(this.YuYue, tip, tipyu);
//
//					return false;
//				}
//				tipyu = "请选择所在省份";
//				if(this.proves == "") {
//					this.$storage1.UserName(this.proves, tip, tipyu);
//					return false;
//				}
//				tipyu = "请选择所在城市";
//				if(this.citys == "") {
//					this.$storage1.UserName(this.citys, tip, tipyu);
//					return false;
//				}
//				tipyu = "请选择所在区域";
//				if(this.diqu == "") {
//					this.$storage1.UserName(this.diqu, tip, tipyu);
//					return false;
//				}
//				return true;
//			},
			selecttime(e) {
				if(e == 2) {
					if(this.doTimeStart == '') {
						this.$message({
							type: 'error',
							message: '请您先选择开始营业时间!'
						});
						this.doTimeEnd = '';
						return false
					}
				}
			},
			selectFlag(flag) {
				//封装参数
				var dataMap = {};

				let no = '';
				if(flag == 2) {
					if(this.no == '') {
						this.$message({
							type: 'error',
							message: '门店编号不能空!'
						});
						this.storeName = '';
						return false
					}
					dataMap['storeName'] = this.storeName;
					dataMap['no'] = '';

					//查询名称
				} else {
					dataMap['storeName'] = '';
					dataMap['no'] = this.no;

				}

				var jsonData = JSON.stringify(dataMap);
				//				请求 后台返回数据
				this.$ajax.post(`${this.$url}/bussinessStore/validBussinessStore.html`, { jsonData: jsonData }).then(data => {
						console.log(data)
						if(data.data == true) {
							this.$message({
								type: 'success',
								message: data.data.message
							});
						} else {
							this.$message({
								type: 'error',
								message: data.data.message
							});
						}
					})
					.catch((error) => {
						console.log(error)
						this.$message.error('获取数据失败');
					})

			},
			//城市四级联动开始
			areaprov: function(even) {
				//this.$emit('areaprov', event.target.value);
				this.proves = even.target.value

				this.cityArr = [];
				for(let i in this.listCity) {
					if(this.proves == this.listCity[i].parentID) {
						//						this.cityArr = this.arr[i];
						//this.$set(this.cityArr, i, this.arrLists[i])
						//vue.set(this.cityArr, i, this.arrLists[i])
						//this.cityArr.push(this.arrLists[i])
						this.cityArr.push(this.listCity[i]);
					}
				}
				//				console.log(this.prov)
			},
			areacity: function(event) {
				//this.$emit('areaprovs', event.target.value)
				this.citys = event.target.value
				this.districtArr = [];
				for(let i in this.listCity) {
					if(this.citys == this.listCity[i].parentID) {

						this.districtArr.push(this.listCity[i]);
					}
				}
			},
			xianqus(event) {
				//				console.log(this.rangelist)
				this.diqu = event.target.value
				console.log(this.diqu)
				this.street = [];
				for(let i in this.areaList) {
					if(this.diqu == this.areaList[i].areaID) {

						this.street.push(this.areaList[i]);
					}
				}
				console.log(this.street)
			},
			xian(event) {
				this.storeAreaID = event.target.value
				console.log(this.storeAreaID)
				for(let i in this.areaList) {
					if(this.storeAreaID == this.areaList[i].ID) {
						this.storeAreaName = this.areaList[i].name
					}
				}
				console.log(this.storeAreaName)
			},
			//城市四级联动结束
			storeAdd() {
				 if(!this.test()){
					return false;
				}
//				let flags = this.checkeds()
//				if(flags) {
					let areaname = '';
					for(let i = 0; i < this.listCity.length; i++) {
						if(this.proves == this.listCity[i].ID || this.citys == this.listCity[i].ID || this.diqu == this.listCity[i].ID) {
							if(areaname == '') {
								areaname = this.listCity[i].areaName
							} else {
								areaname = areaname + ',' + this.listCity[i].areaName
							}
						}
					}
					console.log(areaname)
					var luckElements = document.getElementsByName("aa");
					alert(luckElements.length)
					this.arrays = []
					for(let i = 0; i < luckElements.length; i++) {
						if(luckElements[i].value == '') {
							luckElements[i].value = 0
						}
						this.arrays.push(luckElements[i].value)
					}

					this.arrs = this.arrays.join(',')
					console.log(this.arrs)

					this.$ajax.post(`${this.$url}/bussinessStore/insertBussinessStore.html`, {
							no: this.no,
							storeName: this.storeName,
							bussinessId: this.bussinessId,
							storePhone: this.storePhone,
							storeLinkPerson: this.storeLinkPerson,
							phoneNum: this.phoneNum,
							state: this.state,
							doTimeStart: this.doTimeStart,
							doTimeEnd: this.doTimeEnd,
							YuYue: this.YuYue,
							areaName: this.storeAreaName,
							storeLat: this.storeLat,
							storeLng: this.storeLng,
							province: this.proves,
							city: this.citys,
							county: this.diqu,
							area: this.storeAreaID,
							storeAddress: this.storeAddress,
							isRest: this.isRest,
							storeCity: areaname,
							yuYueNumberArr: this.arrs
						}).then(restaurants => {
							this.$message('添加成功');
							this.$emit('closes');
						})
						.catch((error) => {
							console.log(error)
							this.$message.error('添加失败,请核实您的信息');
						})
//				}
			},
			close() {
				this.no = ''
				this.storeName = ''
				this.bussinessId = ''
				this.storePhone = ''
				this.storeLinkPerson = ''
				this.phoneNum = ''
				this.state = ''
				this.doTimeStart = ''
				this.doTimeEnd = ''
				this.YuYue = ''
				this.storeAreaName = ''
				this.storeLat = ''
				this.storeLng = ''
				this.proves = ''
				this.citys = ''
				this.diqu = ''
				this.storeAreaID = ''
				this.storeAddress = ''
				this.isRest = ''
				this.arrs = ''
				this.$emit('close');
				 this.$router.push({
					name: 'backs',
					query: {
						menuIds: this.menuId,
					}
				})
			}
		},
	}
</script>
<style>
	/*.yueyue{
		margin-top:1px solid #ccc;
	}*/
</style>