<template>
	<transition name="modal-fade">
		<div class="modal-backdrop" >
			<div class="modal" @click.stop>
				<div class="modal-header">
					<slot name="header">
						<h2>商户商品管理---修改</h2>
					</slot>
				</div>
				<div class="modal-body" id="modal-body" style="height:auto">
					<slot name="body">
						<el-row :gutter="10">
							<el-col class="row reformbox" :xs="24" :sm="24" :md="24" :lg="24" :xl="24">
								<div class="reform">
									<h5>商户商品信息<i class="el-collapse-item__arrow el-icon-arrow-right"></i></h5>
								</div>
							</el-col>
							 <el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							  	<div class="box">
							  		<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.bussinessID.$error }">
								  	<span class="mc">商户：</span>
									<el-select @blur="test" class="xl" v-model="updateObj.bussinessID" disabled="disabled" @change="changeBusinessId($event)" >
										<el-option v-for="item in bussiness" :key="item.bussinessID" :label="item.bussinessName" :value="item.bussinessID"></el-option>
									</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.updateObj.bussinessID.required">不能为空</span>
								</div>
							  </el-col>
							  <el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							  	<div class="box">
							  			<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.supplierID.$error }">
								  	<span class="mc">供应商：</span>
									<el-select  @blur="test" class="xl" v-model="updateObj.supplierID" >
										<el-option v-for="item in supplier" :key="item.supplierID" :label="item.supplierName" :value="item.supplierID"></el-option>
									</el-select>
								</div>	
								<span class="form-group__message" v-if="!$v.updateObj.supplierID.required">不能为空</span>
								</div>
							  </el-col>
							 <el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							  	<div class="box">
							  		<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.categoryID.$error }">
								  	<span class="mc">分组类别：</span>
									<el-select   @blur="test" class="xl" v-model="updateObj.categoryID" >
										<el-option v-for="item in categoryData" :key="item.groupingId" :label="item.groupingName" :value="item.groupingId"></el-option>
									</el-select>
								</div>	
								<span class="form-group__message" v-if="!$v.updateObj.categoryID.required">不能为空</span>
								</div>
							  </el-col>
							 <el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							 	<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.goodsName.$error }">
							 	<span class="mc">商品名称：</span>
								<el-input  @blur="test" v-model="updateObj.goodsName" class="name1" clearable>
								</el-input>							   
								 </div>
								<span class="form-group__message" v-if="!$v.updateObj.goodsName.required">不能为空</span>								
								 </div>
							 </el-col>							  
							<el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							 	<div class="box">								
							 		<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.goodsPrice.$error }">
							 	<span class="mc">商品售价：</span>
								<el-input @blur="test" v-model="updateObj.goodsPrice" class="name1" clearable>
								</el-input>
								 </div>
								<span class="form-group__message" v-if="!$v.updateObj.goodsPrice.required">不能为空</span>
								<span class="form-group__message" v-if="!$v.updateObj.goodsPrice.aa">只能填写数字或小数</span>
								 </div>
							 </el-col>
							<el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							 	<div class="box">
								<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.goodsSalesPushMoney.$error }">
							 	<span class="mc">商品销售提成：</span>
								<el-input @blur="test" v-model="updateObj.goodsSalesPushMoney"  class="name1" clearable>
								</el-input>
								 </div>
								<span class="form-group__message" v-if="!$v.updateObj.goodsSalesPushMoney.required">不能为空</span>
								<span class="form-group__message" v-if="!$v.updateObj.goodsSalesPushMoney.aa">只能填写数字或小数</span>
								 </div>
							 </el-col>
							 <el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							  	<div class="box">
							  		<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.unit.$error }">
								  	<span class="mc">单位：</span>
									<el-select class="xl" v-model="updateObj.unit" >
										<el-option v-for="item in optionunit" :key="item.value" :label="item.label" :value="item.value"></el-option>
									</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.updateObj.unit.required">不能为空</span>
								 </div>
							  </el-col>
							 	<el-col class="row" :xs="24" :sm="10" :md="10" :lg="8" :xl="8">
							 	<div class="box">
							  		<div class="form-group" v-bind:class="{'form-group--error': $v.updateObj.state.$error }">
							  	<span class="mc">状态：</span>
								<el-select class="xl" v-model="updateObj.state" >
									<el-option v-for="item in options" :key="item.value" :label="item.label" :value="item.value"></el-option>
								</el-select>
								</div>
								<span class="form-group__message" v-if="!$v.updateObj.state.required">不能为空</span>
								 </div>
							  </el-col>	
						</el-row>
						<el-row :gutter="10">
							<el-col class="row" :xs="24" :sm="14" :md="14" :lg="7" :xl="7">
								<div class="weixin">
									<h5>商品图片<i class="el-collapse-item__arrow el-icon-arrow-right"></i></h5>
								</div>							
							<div class="z_file" @click="clickme" @mouseenter="enterpointer" @mouseleave="exportpointer">
								<img :src="uploadfil" class="bai100" >
								<div class="iconde" v-show="iconshow">
									<div class="lefticon"><i class="el-icon-edit deleteicon"></i></div>
									<div class="righticon" @click.stop="deleteimg()"><i class="el-icon-delete deleteicon"></i></div>
									<input type="file" id="inputfil" class="DISnone" name="wxsecret" @change="update($event)" capture="camera">
								</div>
							</div>
							</el-col>
							<!--<el-col class="row " :xs="14" :sm="10" :md="10" :lg="10" :xl="10">	
								<div class="weixin">
									<h5>选择门店<i class="el-collapse-item__arrow el-icon-arrow-right"></i></h5>
								</div>	
								<el-tree default-expand-all :data="bussarrs" node-key="id" show-checkbox accordion highlight-current ref="tre" :props="defaultProps">
								</el-tree>
						    </el-col>-->
						</el-row>
					</slot>
				</div>
				<div class="modal-footer">
					<slot name="footer">
						<button type="button" class="el-button el-button--primary queding" @click="getaddCategory">确定</button>
						<button type="button" class="el-button el-button--default guanbi" @click="close">关闭</button>						
					</slot>
				</div>
			</div>
		</div>
	</transition>
</template>
<script>
import { required,numeric} from 'vuelidate/lib/validators'
	export default {
		props: ['uuid','bussiness','supplier','updateObj','categoryData','uploadfil'],
		data() {
			return {
				options: [{
						value: '1',
						label: '启用'
					},
					{
						value: '2',
						label: '停用'
					}
				],
				/*categoryData:'',
				categoryID:'',
				businessId:'',
				supplierID:'',
				goodsName:'',
				goodsPrice:'',
				sort:'',
				unit:'',
				aa:'',
				goodsSalesPushMoney:'',
				state: '',*/
				goodsURL:'',
				
				
				//uploadfil: '',
				
				COMiMAGE:this.$delurl,
				iconshow:false,
				optionunit: [{
						value: '瓶',
						label: '瓶'
					},
					{
						value: '个',
						label: '个'
					},
					{
						value: '对',
						label: '对'
					}
					,
					{
						value: '袋',
						label: '袋'
					}
					,
					{
						value: '箱',
						label: '箱'
					}
					,
					{
						value: '桶',
						label: '桶'
					}
					,
					{
						value: '升',
						label: '升'
					}
					,
					{
						value: '条',
						label: '条'
					}
					,
					{
						value: '台',
						label: '台'
					}
					,
					{
						value: '盒',
						label: '盒'
					}
					,
					{
						value: '套',
						label: '套'
					}
				],
			};
		},
		validations: { 
			updateObj:{
				 bussinessID: {  
			      required 
			    } , 
			    supplierID: {  
			      required  
			    },  
			    categoryID: {  
			      required  
			    },
			    goodsName:{
			      required
			    },
			     goodsPrice: {  
			      required,
			      aa: value => {
					if(value.split(".").length == 2) {

						var p1 = /^(((\d*).\d+)|(\d+.(\d*)|\d+))$/;

						return p1.test(value);
					} else {
						var p = /[^\d]/g;
						return !p.test(value);
					}

				}
			    },
			     goodsSalesPushMoney: {  
			      required,
			      aa: value => {
					if(value.split(".").length == 2) {

						var p1 = /^(((\d*).\d+)|(\d+.(\d*)|\d+))$/;

						return p1.test(value);
					} else {
						var p = /[^\d]/g;
						return !p.test(value);
					}

				}
			    },
			     unit: {  
			      required  
			    },
			     state: {  
			      required  
			    },	
			},		   
         },
			mounted: function() {
			//this.uploadfil = this.$imgurl+this.updateObj.goodsURL;
		},
		//初始化门店的经营类别
		methods: {
				test(){
				this.$v.updateObj.bussinessID.$touch()
             	if(this.$v.updateObj.bussinessID.$error){
					return false;
				}
             	this.$v.updateObj.supplierID.$touch()
             	if(this.$v.updateObj.supplierID.$error){
					return false;
				}
             	this.$v.updateObj.categoryID.$touch()
             	if(this.$v.updateObj.categoryID.$error){
					return false;
				}
             	this.$v.updateObj.goodsName.$touch()
             	if(this.$v.updateObj.goodsName.$error){
					return false;
				}
             	this.$v.updateObj.goodsPrice.$touch()
             	if(this.$v.updateObj.goodsPrice.$error){
					return false;
				}
             	this.$v.updateObj.goodsSalesPushMoney.$touch()
             	if(this.$v.updateObj.goodsSalesPushMoney.$error){
					return false;
				}
             	this.$v.updateObj.unit.$touch()
             	if(this.$v.updateObj.unit.$error){
					return false;
				}
             	this.$v.updateObj.state.$touch()
             	if(this.$v.updateObj.state.$error){
					return false;
				}
             	return true
            },
				clickme() {
				//this.$storage1.getid("inputfile");
				document.getElementById("inputfil").click();
			},
		deleteimg() {
				this.$ajax.post(`${this.$url}/bussinessGoods/deleteUpload.html`, {
						servicePath: this.uploadfil
						
					}).then(data => {
						if(data.data.flag == true) {
							this.$message.error('删除成功');
							this.iconshow = false;
							this.uploadfil = this.COMiMAGE;
						}
					})
					.catch((error) => {
						console.log(error)
					})
			},
			
			enterpointer() {
				//alert(222)
				if(this.uploadfil == this.COMiMAGE) {} else {
					this.iconshow = true;
				}
			},
			exportpointer() {
				this.iconshow = false;
			},
			update(e) {
				//alert(222)
				let file = e.target.files[0];
				let param = new FormData(); //创建form对象
				param.append('file', file, file.name); //通过append向form对象添加数据
				//param.append('chunk', index); //上传的第一个 类型0 文本类型  第二个1图片类型 第三个 2 图片类型
               if(!/.(gif|jpg|jpeg|png|gif|jpg|png)$/.test(file.name)){
					
					this.$message({
					type: 'success',
					message: '请传正确的图片格式!'
				});
					return false
				}
				let size = Math.floor(file.size / 1024);
		            if (size > 500) {
		                this.$message({
					type: 'success',
					message: '您上传的图片太大请限制在100k内!'
		                
		                });
		                return false
		            }
				console.log(param.get('file')); //FormData私有类对象，访问不到，可以通过get判断值是否传进去
				const instance = this.$ajax.create({
					withCredentials: true
				})
				 
				instance.post(`${this.$url}/bussinessGoods/upload.html`, param).then(response => {
						console.log(response.data);
						
							this.uploadfil = this.$imgurl + response.data.content
							
						    this.goodsURL=response.data.content
						   
                            //this.$set(uploadfile, this.$imgurl + this.goodsURL);
					})
					//this.$set(uploadfile, this.$imgurl + this.goodsURL);
			},
			//调用父组建的方法
			close: function() {
				//	console.log(this.assar)
				this.$emit('close');
			},
		 
			show(){},
			getaddCategory() {
				if(!this.test()){
					return false
				}
				var dataMap = {};
				      dataMap['goodsID'] = this.updateObj.goodsID;
				      dataMap['categoryID'] = this.updateObj.categoryID;
				      dataMap['supplierID'] = this.updateObj.supplierID;
				      dataMap['goodsName'] = this.updateObj.goodsName;
				      dataMap['goodsPrice'] = this.updateObj.goodsPrice;
				      dataMap['unit'] = this.updateObj.unit;
				      dataMap['goodsSalesPushMoney'] = this.updateObj.goodsSalesPushMoney;
				      dataMap['state'] = this.updateObj.state;
				      dataMap['goodsURL'] = this.goodsURL;
				      dataMap['bussinessStoreId'] = this.updateObj.bussinessStoreId;
				      
				      var sign = this.$utilMd5s.md5Code(JSON.stringify(dataMap));
				      dataMap['sign'] = sign;
				       
				       dataMap['uuid'] = this.uuid;
				      var jsonData = JSON.stringify(dataMap);
				
				
				
				        this.$ajax.post(`${this.$url}/bussinessGoods/updateGoods.html`, {
				   /* goodsID:this.updateObj.goodsID,
					categoryID:this.updateObj.categoryID,
					supplierID:this.updateObj.supplierID,
					goodsName:this.updateObj.goodsName,
					goodsPrice:this.updateObj.goodsPrice,
					unit:this.updateObj.unit,
					goodsSalesPushMoney:this.updateObj.goodsSalesPushMoney,
					state: this.updateObj.state,
					goodsURL:this.goodsURL,
					bussinessStoreId:this.updateObj.bussinessStoreId*/
					jsonData:jsonData
				}).then(restaurants => {
					console.log(restaurants)
					this.$emit('close');
				})        
			},
		}
	}
</script>
